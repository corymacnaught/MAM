/*cout << endl;
  cout << "\t\\***********************************************************" << endl;
  cout << "\t\\* ROUTINE: affichage d'un entier" << endl;
  cout << "\t\\*" << endl;
  cout << "\t\\*     Paramètres:" << endl;
  cout << "\t\\*        R1    registre de pile" << endl;
  cout << "\t\\*        R3    adresse de retour" << endl;
  cout << "\t\\*        R5    entier à afficher" << endl;
  cout << "\t\\***********************************************************" << endl;
  cout << "L10:" << endl;
  cout << "\t\\ empile les registres utilisés par la routine" << endl;
  cout << "\tPSH  0(R5)" << endl;
  cout << "\tPSH  0(R15)" << endl;
  cout << "\tPSH  0(R8)" << endl;
  cout << "\tPSH  0(R9)" << endl;
  cout << endl;
  cout << "\t\\##############################################" << endl;
  cout << "\t\\######## INSÉRER CODE D'AFFICHAGE ICI ########" << endl;
  cout << "\t\\##############################################" << endl;
  cout << "L11:" << endl;
  cout << "\tLDA 10(R0),R8              \\ R8 = 10" << endl;
  cout << "\tDIV R5,R8                  \\ R8 = R5 / R8 (R8 = 3026)" << endl;
  cout << endl;
  cout << "\tLDA 10(R0),R9              \\ R9 = 10" << endl;
  cout << "\tMUL R9,R8                  \\ R8 = R8 * 10  (R8 = 30260)" << endl;
  cout << endl;
  cout << "\tSUB R5,R8                  \\ R8 = dernier digit de R5 (R8 = 7)" << endl;
  cout << endl;
  cout << "\tLDA 48(R0),R9              \\ R9 = 10" << endl;
  cout << "\tADD R9,R8                  \\ R8 = code ASCII du digit (R8 = 55)" << endl;
  cout << endl;
  cout << "\tLDR R8,R15                 \\ R15 = R8 (R15 = 55)" << endl;
  cout << endl;
  cout << "\tTRAP                       \\ print R15" << endl;
  cout << endl;
  cout << "\t\\ On se debarasse du dernier digit de R5" << endl;
  cout << "\tLDA 10(R0),R8              \\ R8 = 10" << endl;
  cout << "\tDIV R5,R8                  \\ R8 = R5 / 10 (R8 = 3026)" << endl;
  cout << "\tLDR R8,R5                  \\ R5 = R8 (R5 = 3026)" << endl;
  cout << endl;
  cout << "\t\\ Prochaine iteration" << endl;
  cout << "\tBNZ L11(R0)" << endl;
  cout << endl;
  cout << "\t\\ restaurer les registres modifiés" << endl;
  cout << "\tPOP  R9" << endl;
  cout << "\tPOP  R8" << endl;
  cout << "\tPOP  R15" << endl;
  cout << "\tPOP  R5" << endl;
  cout << endl;
  cout << "\tBRA  0(R3)                \\ retour de l'appel" << endl;
  cout << endl;
  cout << "\t\\ lire une entier du console et le met dans la registre R5" << endl;
  cout << "\tL14:" << endl;
  cout << "\tPSH 0(R5)	\\ conteneur de la valeur d'entre" << endl;
  cout << "\tPSH 0(R15)	\\ registre de trap" << endl;
  cout << "\tPSH 0(R9)	\\ valeur temp 1" << endl;
  cout << "\tPSH 0(R8)	\\ valeur temp 2" << endl;
  cout << endl;
  cout << "L15:" << endl;
  cout << "\tLDA 0x80000000(R0),R15      \\ met le bit la plus significatif a 1 dans R15" << endl;
  cout << "\tTRAP                        \\ demande au console une caractere" << endl;
  cout << "\tTRAP                        \\ Affiche a l'ecran la valeur de R15" << endl;
  cout << endl;
  //cout << "\tPSH 0(R8)			\\ Push R5" << endl;
  //cout << "\tLDA 0(R15),R8		\\ Rentre la valeur de R15 dans R5" << endl;
  cout << endl;
  cout << "\tLDA 10(R0),R9               \\ retour de chariot dans R9" << endl;
  cout << "\tSUB R9,R15                  \\ soustrait R15 par Retour de chariot" << endl;
  cout << "\tBNZ L15(R0)                 \\ branche a L15 si R15 != 0" << endl;
			// Le code pour garder la valeur entrer dans R5
			// commante en assembleur la ligne POP R5 dans le cas que le code soit rajouter
  //cout << endl;
  //cout << "\t\\ rentre les valeurs ascii dans la staque de R8 dans la valeur du registre R5" << endl;
  //cout << "\tPOP R8			\\ Enleve le retour de chariot de R8" << endl;
  //cout << "L16:" << endl;
  //cout << "\tLDA 48(R0),R9		\\ R9 = 48" << endl;
  //cout << "\tSUB R8,R9			\\ Convertit de code ascii a entier" << endl;
  //cout << "\tLDR R9,R8			\\ Met la valeur de R9 dans R8, R8 a maintenant la valeur entier" << endl;
  //cout << endl;
  //cout << "\tLDA 10(R0),R9		\\ R9 = 10" << endl;
  //cout << "\tMUL R9,R5			\\ Multiplie la valeur de R5 par 10" << endl;
  //cout << endl;
  //cout << "\tADD R8,R5			\\ Ajoute R8 a R5" << endl;
  //cout << endl;
  //cout << "\tPOP R8			\\ Pop R8" << endl;
  //cout << "\tBNZ L16(R0)" << endl;
  //cout << endl;
  cout << "\t\\ stack pop" << endl;
  cout << "\tPOP R8" << endl;
  cout << "\tPOP R9" << endl;
  cout << "\tPOP R15" << endl;
  cout << "\tPOP R5" << endl;
  cout << endl;
  cout << "\tBRA 0(R3)                \\ retour de l'appel" << endl;*/
